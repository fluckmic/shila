## Do a simple test to see if we are able to establish a connection
#  to all clients and clean up everything.
SCRIPT_CMD="sudo bash ""$PATH_TO_EXPERIMENT""/cleanUp.sh"
for CLIENT in "${CLIENTS[@]}"; do
 ssh -tt scion@"$CLIENT" -q "$SCRIPT_CMD" 1
 if [[ $? -ne 0 ]]; then
   printf "Failure : Cannot connect to %s.\n" "$CLIENT"
   exit 1
 fi
 printf "Success : Connection to %s.\n" "$CLIENT"
done
########################################################################################################################
## Initialize the clients
SCRIPT_NAME="init"
SCRIPT_CMD="sudo bash ""$PATH_TO_EXPERIMENT""/""$SCRIPT_NAME"".sh"

for CLIENT in "${CLIENTS[@]}"; do
 ssh -tt scion@"$CLIENT" -q "$START_SESSION" "$SCRIPT_NAME" "$SCRIPT_CMD"
done
for CLIENT in "${CLIENTS[@]}"; do
 ./waitforReturn.sh "$CLIENT" "$SCRIPT_NAME" 0 30   # Polling w/ timeout after 30 seconds.
 if [[ $? -eq 1 ]]; then
   exit 1
 fi
 printf "Success : Initialization of %s.\n" "$CLIENT"
done
########################################################################################################################
## Do connection checks.
#  Start the connection test servers.
SCRIPT_NAME="connTestServer"
SCRIPT_CMD="sudo bash ""$PATH_TO_EXPERIMENT""/""$SCRIPT_NAME"".sh"

for CLIENT in "${CLIENTS[@]}"; do
  ssh -tt scion@"$CLIENT" -q "$START_SESSION" "$SCRIPT_NAME" "$SCRIPT_CMD"
done
sleep 3
for CLIENT in "${CLIENTS[@]}"; do
 ./waitforReturn.sh "$CLIENT" "$SCRIPT_NAME" 1 0   # No polling.
 if [[ $? -eq 1 ]]; then
   exit 1
 fi
 printf "Success : Starting connection test server on %s.\n" "$CLIENT"
done

#  Run the connection test clients.
SCRIPT_NAME="connTestClient"
SCRIPT_CMD="sudo bash ""$PATH_TO_EXPERIMENT""/""$SCRIPT_NAME"".sh"

for CLIENT in "${CLIENTS[@]}"; do
  ssh -tt scion@"$CLIENT" -q "$START_SESSION" "$SCRIPT_NAME" "$SCRIPT_CMD"
done
for CLIENT in "${CLIENTS[@]}"; do
 ./waitforReturn.sh "$CLIENT" "$SCRIPT_NAME" 0 20   # Polling w/ timeout 10 seconds.
 if [[ $? -eq 1 ]]; then
   exit 1
 fi
 printf "Success : Connection test for %s.\n" "$CLIENT"
done
########################################################################################################################